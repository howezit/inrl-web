require('../settings');
const express = require('express');
const router = express.Router();
const fs = require('fs');
const {
	addLimit,
	photooxy
} = require('../lib');
const keys = inrlkeys.map(a => a.k)

router.get('/photooxy/flaming', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/logo-and-text-effects/realistic-flaming-text-effect-online-197.html", message)
		return res.json({
			status: true,
			creator,
			result: result.image
		});
	} catch {
		return error200(res)
	}
})


router.get('/photooxy/shadow-sky', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/logo-and-text-effects/shadow-text-effect-in-the-sky-394.html", message)
		return res.json({
			status: true,
			creator,
			result: result.image
		});
	} catch {
		return error200(res)
	}
})


router.get('/photooxy/metallic', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/other-design/create-metallic-text-glow-online-188.html", message)
		return res.json({
			status: true,
			creator,
			result: result.image
		});
	} catch {
		return error200(res)
	}
})


router.get('/photooxy/naruto', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/manga-and-anime/make-naruto-banner-online-free-378.html", message)
		return res.json({
			status: true,
			creator,
			result: result.image
		});
	} catch {
		return error200(res)
	}
})


router.get('/photooxy/pubg', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/battlegrounds/make-wallpaper-battlegrounds-logo-text-146.html", message);
		return res.json({
			status: true,
			creator,
			result: result
		});
	} catch {
		return error200(res)
	}
})

router.get('/photooxy/under-grass', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/logo-and-text-effects/make-quotes-under-grass-376.html", message)
		return res.json({
			status: true,
			creator,
			result: result.image
		});
	} catch {
		return error200(res)
	}
})

router.get('/photooxy/harry-potter', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/logo-and-text-effects/create-harry-potter-text-on-horror-background-178.html", message)
		return res.json({
			status: true,
			creator,
			result: result.image
		});
	} catch {
		return error200(res)
	}
})

router.get('/photooxy/flower-typography', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/art-effects/flower-typography-text-effect-164.html", message)
		return res.json({
			status: true,
			creator,
			result: result.image
		});
	} catch {
		return error200(res)
	}
})

router.get('/photooxy/picture-of-love', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/logo-and-text-effects/create-a-picture-of-love-message-377.html", message)
		return res.json({
			status: true,
			creator,
			result: result.image
		});
	} catch {
		return error200(res)
	}
})

router.get('/photooxy/coffee-cup', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/logo-and-text-effects/put-any-text-in-to-coffee-cup-371.html", message)
		return res.json({
			status: true,
			creator,
			result: result.image
		});
	} catch {
		return error200(res)
	}
})

router.get('/photooxy/butterfly', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/logo-and-text-effects/butterfly-text-with-reflection-effect-183.html", message)
		return res.json({
			status: true,
			creator,
			result: result.image
		});
	} catch {
		return error200(res)
	}
})

router.get('/photooxy/night-sky', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/logo-and-text-effects/write-stars-text-on-the-night-sky-200.html", message)
		return res.json({
			status: true,
			creator,
			result: result.image
		});
	} catch {
		return error200(res)
	}
})


router.get('/photooxy/carved-wood', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/logo-and-text-effects/carved-wood-effect-online-171.html", message)
		return res.json({
			status: true,
			creator,
			result: result.image
		});
	} catch {
		return error200(res)
	}
})


router.get('/photooxy/illuminated-metallic', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/logo-and-text-effects/illuminated-metallic-effect-177.html", message)
		return res.json({
			status: true,
			creator,
			result: result.image
		});
	} catch {
		return error200(res)
	}
})

router.get('/photooxy/sweet-candy', async (req, res, next) => {
	try {
		const id = req.query.text;
		const apikey = req.query.apikey;
		if (!apikey) return errorMsg(res, 'no apikey provided');
		if (!keys.includes(apikey)) return errorMsg(res, 'apikey not registered');
		const limits = await addLimit(apikey);
		if (!limits.status) return errorMsg(res, 'apikey limit over');
		if (!id) return errorMsg(res, 'missing parameter text');
		const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
		const result = await photooxy("https://photooxy.com/logo-and-text-effects/sweet-andy-text-online-168.html", message)
		return res.json({
			status: true,
			creator,
			result: result.image
		});
	} catch {
		return error200(res)
	}
})


module.exports = router
