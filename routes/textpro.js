require('../settings');
const { textpro } = require('../lib');
const express = require('express');
const router = express.Router();

router.get('/dragon', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/jpg'})
    return res.end(await (await textpro("https://textpro.me/create-3d-dragon-scale-text-effect-online-1127.html", message)).image);
})
router.get('/pornhub', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/generate-a-free-logo-in-pornhub-style-online-977.html", message)).image);
})
router.get('/blood', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/blood-text-on-the-frosted-glass-941.html", message)).image);
})
router.get('/1917', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/1917-style-text-effect-online-980.html", message)).image);
})



router.get('/marvel', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-logo-style-marvel-studios-online-971.html", message)).image);
})
router.get('/spooky', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-a-spooky-halloween-text-effect-online-1046.html", message)).image);
})
router.get('/toxic', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/toxic-text-effect-online-901.html", message)).image);
})
router.get('/avengers', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-3d-avengers-logo-online-974.html", message)).image);
})
router.get('/gameover', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/video-game-classic-8-bit-text-effect-1037.html", message)).image);
})
router.get('/window', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/write-text-on-foggy-window-online-free-1015.html", message)).image);
})
router.get('/summer', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-sunset-light-text-effects-online-for-free-1124.html", message)).image);
})
router.get('/forework', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/firework-sparkle-text-effect-930.html", message)).image);
})
router.get('/sliced', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-light-glow-sliced-text-effect-online-1068.html", message)).image);
})
router.get('/naruto', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-naruto-logo-style-text-effect-online-1125.html", message)).image);
})
router.get('/3dbox', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/3d-box-text-effect-online-880.html", message)).image);
})
router.get('/batman', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/make-a-batman-logo-online-free-1066.html", message)).image);
})
router.get('/dropwater', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/dropwater-text-effect-872.html", message)).image);
})
router.get('/sand', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/sand-engraved-3d-text-effect-989.html", message)).image);
})
router.get('/palm', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-a-summer-text-effect-with-a-palm-tree-1083.html", message)).image);
})
router.get('/lava', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/lava-text-effect-online-914.html", message)).image);
})
router.get('/pottery', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-3d-pottery-text-effect-online-1088.html", message)).image);
})
router.get('/wall', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/break-wall-text-effect-871.html", message)).image);
})
router.get('/slime', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-green-slime-text-effect-online-1097.html", message)).image);
})
router.get('/skeleton', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/skeleton-text-effect-online-929.html", message)).image);
})
router.get('/business', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/3d-business-sign-text-effect-1078.html", message)).image);
})
router.get('/star', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/decorate-green-text-effect-918.html", message)).image);
})
router.get('/typography', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-artistic-typography-online-1086.html", message)).image);
})
router.get('/natural', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/natural-leaves-text-effect-931.html", message)).image);
})
router.get('/birthday', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/foil-balloon-text-effect-for-birthday-987.html", message)).image);
})
router.get('/road', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/road-warning-text-effect-878.html", message)).image);
})
router.get('/pokemon', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-pokemon-logo-style-text-effect-online-1134.html", message)).image);
})
router.get('/magma', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-a-magma-hot-text-effect-online-1030.html", message)).image);
})
router.get('/carbon', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/carbon-text-effect-833.html", message)).image);
})
router.get('/giraffe', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-3d-giraffe-text-effect-online-1069.html", message)).image);
})
router.get('/metallic', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-3d-metallic-text-with-details-online-1108.html", message)).image);
})
router.get('/eroded', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/eroded-metal-text-effect-834.html", message)).image);
})
router.get('/gold', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/text-logo-3d-metal-gold-944.html", message)).image);
})
router.get('/deep', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-3d-deep-sea-metal-text-effect-online-1053.html", message)).image);
})
router.get('/scary', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-scary-halloween-text-effects-online-1090.html", message)).image);
})
router.get('/ancient', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/3d-golden-ancient-text-effect-online-free-1060.html", message)).image);
})
router.get('/captain', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/create-a-captain-america-text-effect-free-online-1039.html", message)).image);
})
router.get('/whitegold', async (req, res) => {
    let id = req.query.text;
    if (!id) return res.json({
        status: false,
        creator: `${creator}`,
        message: 'give me a text!'
    })
    const message = id.match(/[,|;]/) ? id.split(/[,|;]/) : [id.trim(), "generated by inrl"]
    res.set({'Content-Type': 'image/png'})
    return res.end(await (await textpro("https://textpro.me/elegant-white-gold-3d-text-effect-online-free-1070.html", message)).image);
})

module.exports = router
